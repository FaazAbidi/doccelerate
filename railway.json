{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 3
  },
  "services": {
    "api": {
      "source": {
        "repo": ".",
        "rootDirectory": "api"
      },
      "build": {
        "builder": "NIXPACKS",
        "buildCommand": "uv sync --frozen && uv run prisma generate"
      },
      "deploy": {
        "startCommand": "uv run uvicorn main:app --host 0.0.0.0 --port $PORT",
        "restartPolicyType": "ON_FAILURE"
      },
      "variables": {
        "PORT": "8000",
        "PYTHONDONTWRITEBYTECODE": "1",
        "PYTHONUNBUFFERED": "1"
      },
      "healthcheck": {
        "path": "/api/v1/health/",
        "timeout": 300
      }
    },
    "web": {
      "source": {
        "repo": ".",
        "rootDirectory": "web"
      },
      "build": {
        "builder": "NIXPACKS",
        "buildCommand": "npm ci && npx prisma generate && npm run build"
      },
      "deploy": {
        "startCommand": "npm start",
        "restartPolicyType": "ON_FAILURE"
      },
      "variables": {
        "PORT": "3000",
        "NODE_ENV": "production",
        "NEXT_PUBLIC_API_URL": "${{api.RAILWAY_PUBLIC_DOMAIN}}"
      },
      "dependencies": ["api"]
    },
    "celery-worker": {
      "source": {
        "repo": ".",
        "rootDirectory": "api"
      },
      "build": {
        "builder": "NIXPACKS",
        "buildCommand": "uv sync --frozen && uv run prisma generate"
      },
      "deploy": {
        "startCommand": "uv run celery -A app.tasks.celery_app worker --loglevel=info",
        "restartPolicyType": "ON_FAILURE"
      },
      "variables": {
        "PYTHONDONTWRITEBYTECODE": "1",
        "PYTHONUNBUFFERED": "1",
        "C_FORCE_ROOT": "1"
      },
      "dependencies": ["api"]
    }
  },
  "environments": {
    "production": {
      "variables": {
        "DATABASE_URL": "${{Postgres.DATABASE_URL}}",
        "DIRECT_URL": "${{Postgres.DATABASE_URL}}",
        "REDIS_URL": "${{Redis.REDIS_URL}}",
        "SUPABASE_URL": "${{SUPABASE_URL}}",
        "SUPABASE_ANON_KEY": "${{SUPABASE_ANON_KEY}}",
        "SUPABASE_KEY": "${{SUPABASE_KEY}}",
        "OPENAI_API_KEY": "${{OPENAI_API_KEY}}",
        "NEXTAUTH_SECRET": "${{NEXTAUTH_SECRET}}",
        "NEXTAUTH_URL": "${{web.RAILWAY_PUBLIC_DOMAIN}}",
        "GITHUB_CLIENT_ID": "${{GITHUB_CLIENT_ID}}",
        "GITHUB_CLIENT_SECRET": "${{GITHUB_CLIENT_SECRET}}",
        "NEXT_PUBLIC_SUPABASE_URL": "${{SUPABASE_URL}}",
        "NEXT_PUBLIC_SUPABASE_ANON_KEY": "${{SUPABASE_ANON_KEY}}"
      }
    }
  }
} 