services:
  # FastAPI Backend Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - C_FORCE_ROOT=1
    env_file:
      - .env
    volumes:
      - ./api:/app
      - /app/node_modules

  # Celery Worker Service
  celery-worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - C_FORCE_ROOT=1
    env_file:
      - .env
    volumes:
      - ./api:/app
      - /app/node_modules
    command: ["sh", "-c", "uv run prisma generate && uv run python worker.py"]
    depends_on:
      - api

  # Next.js Frontend Service
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      # target: development
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
      - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api

volumes:
  redis_data:

networks:
  default:
    driver: bridge 