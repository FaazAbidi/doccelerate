services:
  # Redis Service
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # FastAPI Backend Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - C_FORCE_ROOT=1
    env_file:
      - .env
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      - redis

  # Celery Worker Service
  celery-worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379
      - C_FORCE_ROOT=1
    env_file:
      - .env
    volumes:
      - ./api:/app
      - /app/node_modules
    command: ["sh", "-c", "uv run prisma generate && uv run celery -A app.tasks.celery_app worker --loglevel=info"]
    depends_on:
      - api
      - redis

  # Next.js Frontend Service
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
      - NODE_ENV=development
    env_file:
      - .env
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api

volumes:
  redis_data:

networks:
  default:
    driver: bridge 